name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: code_review_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: ./mvnw -B package --file pom.xml
      
    - name: Run Tests
      run: ./mvnw test
      
    - name: Analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yourusername_code-review
      if: env.SONAR_TOKEN != ''
      
    - name: Build and publish Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=yourusername/code-review:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

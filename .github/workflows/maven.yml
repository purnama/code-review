name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Set up Docker Compose
      uses: docker/setup-buildx-action@v2
      
    - name: Start PostgreSQL with pgvector using Docker Compose
      run: |
        docker compose -f compose.yaml up -d postgres
        # Wait for PostgreSQL to be ready (give it more time to initialize)
        echo "Waiting for PostgreSQL to be ready..."
        sleep 10  # Add a delay of 10 seconds
        # Try multiple times to check if PostgreSQL is ready
        for i in {1..10}; do
          echo "Attempt $i: Checking if PostgreSQL is ready..."
          if docker compose -f compose.yaml exec -T postgres pg_isready -U postgres; then
            echo "PostgreSQL is ready!"
            break
          fi
          echo "PostgreSQL is not ready yet. Waiting..."
          sleep 5
        done
        
    - name: Debug Migration Files
      run: |
        echo "Listing migration files:"
        find src/main/resources/db/migration -type f | sort
        echo "Migration file contents:"
        cat src/main/resources/db/migration/V5__add_active_column_to_confluence_urls.sql
        cat src/main/resources/db/migration/V6__add_embedding_column_to_content_blocks.sql
        
        echo "Checking compiled resources:"
        find target/classes/db/migration -type f | sort 2>/dev/null || echo "Directory not found"
        
    - name: Build with Maven and Run Tests
      run: ./mvnw -B package --file pom.xml
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      
    - name: Analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=yourusername_code-review
      if: env.SONAR_TOKEN != ''
      
    - name: Build and publish Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=yourusername/code-review:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Stop Docker containers
      if: always()
      run: docker compose -f compose.yaml down

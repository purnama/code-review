# Application name and server configuration
spring.application.name=code-review
server.port=8080

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/code_review
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# Show SQL parameter values
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
logging.level.org.hibernate.type=INFO
# This property works with Spring Boot 3.x
logging.level.org.hibernate.orm.jdbc.bind=INFO

# Flyway Configuration - enabled just for pgvector initialization
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Thymeleaf Configuration
spring.thymeleaf.cache=false

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.de.purnama=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# Error Handling Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
server.error.whitelabel.enabled=false
server.error.include-message=always
server.error.include-binding-errors=always

# OpenAI Configuration
spring.ai.openai.api-key=your-openai-api-key

# Confluence API Configuration
confluence.base-url=https://your-instance.atlassian.net/
confluence.username=your-email@example.com
confluence.api-token=your-api-token
confluence.space-key=SPACE

# GitHub API Configuration
# Create a token at https://github.com/settings/tokens with 'repo' scope
github.access-token=your-github-token

# Code Review Configuration
code.review.max-files=10
code.review.content-blocks-limit=10
code.review.api-timeout-seconds=600
code.review.chunk-size=5000